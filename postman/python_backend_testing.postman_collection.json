{
	"info": {
		"_postman_id": "d0b047bd-b7b9-478d-b429-75afe2767936",
		"name": "Items API - Pytest Replication",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "49019588",
		"_collection_link": "https://victorsuleiman-1994-7200647.postman.co/workspace/Victor-Suleiman's-Workspace~7634523a-6b78-4693-834e-ab84b717d155/collection/49019588-d0b047bd-b7b9-478d-b429-75afe2767936?action=share&source=collection_link&creator=49019588"
	},
	"item": [
		{
			"name": "Create Item",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 201', function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"pm.test('Response has id and name', function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('id');",
							"    pm.expect(jsonData.name).to.eql('A');",
							"});"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": \"1\",\r\n    \"name\": \"A\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/items",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"items"
					]
				}
			},
			"response": []
		},
		{
			"name": "List Items",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test('Response is an array', function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.be.an('array');",
							"});"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/items",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"items"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Item by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test('Response has correct id', function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.id).to.eql(1);",
							"});"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/items/1",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"items",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Item",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test('Response has updated name', function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.name).to.eql('AA');",
							"});"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": \"1\",\r\n    \"name\": \"AA\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/items/1",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"items",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Item",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 204', function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/items/1",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"items",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Deleted Item (Not Found)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 404', function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/items/1",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"items",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Item for Conflict",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 201', function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": \"2\",\r\n    \"name\": \"B\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/items",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"items"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Item Conflict",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 409', function () {",
							"    pm.response.to.have.status(409);",
							"});"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": \"2\",\r\n    \"name\": \"B\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/items",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"items"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Non-existent Item (Not Found)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 404', function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/items/999",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"items",
						"999"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "baseURL",
			"value": "",
			"type": "default"
		}
	]
}